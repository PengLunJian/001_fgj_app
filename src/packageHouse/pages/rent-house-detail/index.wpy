<template>
  <div class="container">
    <div class="content">
      <div class="header">
        <top-bar title="房源详情"></top-bar>
      </div>
      <div class="body">
        <loading :isLoading="isLoading"></loading>
        <error :isFailure="isFailure" @refresh="onRefresh"></error>
        <div class="context fade" v-if="isSuccess&&isData">
          <scroll-view
            class="scroll-view"
            scroll-y="{{true}}">
            <div class="scroll-content">
              <detail-banner :isData="isData"/>
              <detail-base :isData="isData"/>
              <detail-agent :isData="isData"/>
              <detail-config :isData="isData"/>
              <detail-map :name="isData.houseName" :latitude="latitude" :longitude="longitude"/>
            </div>
          </scroll-view>
          <detail-footer :isData="isData"/>
        </div>
      </div>
      <div class="footer"></div>
    </div>
  </div>
</template>

<script type="text/ecmascript-6">
  import wepy from '@wepy/core';
  import store from '../../../store';
  import QQMapWX from 'wx-qqmap-jssdk';
  import {mapState, mapActions} from '@wepy/redux';
  import * as $storage from '../../../utils/storage';
  import * as controller from './controller';

  wepy.page({
    store,
    data: {
      latitude: 0,
      longitude: 0
    },

    computed: {
      ...mapState(controller.STATES)
    },

    methods: {
      ...mapActions(controller.ACTIONS),
      onRefresh() {
        this.exeAjaxSelectDetail();
      },
      onHandleInitQQMap() {
        const {province, city, area, address, houseName} = this.isData;
        const detailAddress = province + city + area + address + houseName;
        const qqmapsdk = new QQMapWX({
          key: 'MFZBZ-MGLWS-C55OR-6KRVW-K6ZFK-YUF3R'
        });
        qqmapsdk.geocoder({
          address: detailAddress,
          success: (res) => {
            res = res || {};
            const {result} = res;
            const {location} = result || {};
            const {lat, lng} = location || {};
            this.latitude = lat;
            this.longitude = lng;
            console.log('东经=' + lng + '|北纬=' + lat);
          }
        });
      },
      exeAjaxSelectDetail() {
        const {id} = this.$wx.options;
        const user = $storage.getItem('user');
        const phone = user.phone || '';
        this.ajaxSelectDetail({id, phone})
          .then((res) => {
            this.onHandleInitQQMap();
            console.log(res);
          })
          .catch((err) => {
            console.log(err);
          });
      }
    },

    onLoad() {
      this.exeAjaxSelectDetail();
    }
  });
</script>

<style scoped lang="less">
  @import "../../../assets/less/variable";
  @import "../../../assets/less/@media";

  .container {
    min-height: 100vh;
    .content {
      height: 100vh;
      .header {
      }
      .body {
        height: 100%;
        position: relative;
        .context {
          height: 100%;
          padding-top: 65px;
          padding-bottom: unit(110, rpx);
          .scroll-view {
            height: 100%;
            .scroll-content {
              padding-bottom: unit(20, rpx);
            }
          }
        }
      }
      .footer {
      }
    }
  }
</style>

<config>
  {
  navigationStyle:'custom',
  usingComponents: {
  'top-bar': '../../../components/top-bar/top-bar',
  'loading': '../../../components/loading/loading',
  'error': '../../../components/error/error',
  'detail-banner':'../../../components/detail-banner/detail-banner',
  'detail-base':'../../../components/detail-base/detail-base',
  'detail-agent':'../../../components/detail-agent/detail-agent',
  'detail-config':'../../../components/detail-config/detail-config',
  'detail-map':'../../../components/detail-map/detail-map',
  'detail-footer':'../../../components/detail-footer/detail-footer'
  }
  }
</config>
