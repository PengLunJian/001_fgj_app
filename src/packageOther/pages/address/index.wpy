<template>
  <div class="container">
    <div class="content">
      <div class="header">
        <top-bar title="选择城市"/>
      </div>
      <div class="body">
        <loading :isLoading="isLoading&&!isData.length"></loading>
        <error :isFailure="isFailure&&!isData.length" @refresh="onRefresh"></error>
        <empty :isSuccess="isSuccess&&!isData.length"></empty>
        <div class="context fade" v-if="isData.length">
          <scroll-view
            class="scroll-view"
            scroll-y="{{true}}">
            <div class="module" v-for="(item,index) in isData"
                 v-if="item.items.length" :key="index">
              <div class="module-content">
                <div class="module-header">{{item.label}}</div>
                <div class="module-body">
                  <div class="module-citys">
                    <div class="module-row row">
                      <div class="module-col col-3" v-for="(city,index) in item.items" :key="index">
                        <div class="module-item" @tap="onHandleUpdateCitys(city)">{{city.fullname}}</div>
                      </div>
                    </div>
                  </div>
                </div>
                <div class="module-footer"></div>
              </div>
            </div>
          </scroll-view>
        </div>
      </div>
      <div class="footer"></div>
    </div>
  </div>
</template>

<script type="text/ecmascript-6">
  import wepy from '@wepy/core';
  import store from '../../../store';
  import Route from '../../../mixins/route';
  import {mapState, mapActions} from '@wepy/redux';
  import * as controller from './controller';

  wepy.page({
    store,

    mixins: [Route],

    data: {},

    computed: {
      ...mapState(controller.STATES)
    },

    methods: {
      ...mapActions(controller.ACTIONS),
      onHandleUpdateCitys(item) {
        this.updateCitysReplace(item);
        this.navigateBack(1);
      },
      exeAjaxSelectCitys() {
        this.ajaxSelectCitys()
          .then((res) => {
            res = res || {};
            console.log(res);
          })
          .catch((err) => {
            console.log(err);
          });
      },
      onRefresh() {
        this.exeAjaxSelectCitys();
      }
    },

    onLoad() {
      if (!this.isSuccess) {
        this.exeAjaxSelectCitys();
      }
    }
  });
</script>

<style scoped lang="less">
  @import "../../../assets/less/@media";
  @import "../../../assets/less/variable";

  .container {
    .content {
      height: 100vh;
      .header {
      }
      .body {
        height: 100%;
        position: relative;
        .context {
          height: 100%;
          padding-top: 65px;
          .scroll-view {
            height: 100%;
            .module {
              margin: 0;
              .module-content {
                .module-header {
                  height: unit(70, rpx);
                  line-height: unit(70, rpx);
                  padding: 0 unit(30, rpx);
                  background-color: #F7F7F7;
                  font-size: @fontSize28;
                  color: @fontColor1;
                  font-weight: bold;
                }
                .module-body {
                  .module-citys {
                    text-align: center;
                    .module-row {
                      padding: unit(15, rpx);
                      .module-col {
                        padding: unit(15, rpx);
                        .module-item {
                          overflow: hidden;
                          height: unit(60, rpx);
                          padding: 0 unit(20, rpx);
                          line-height: unit(60, rpx);
                          border-radius: unit(60, rpx);
                          background-color: @bgColor;
                          font-size: @fontSize24;
                          color: @fontColor3;
                          &.on {
                            background: -webkit-linear-gradient(left, @theme1, @theme2);
                            color: @white;
                          }
                          &.checked {
                            background: -webkit-linear-gradient(left, @theme1, @theme2);
                            color: @white;
                          }
                        }
                      }
                    }
                  }
                }
                .module-footer {

                }
              }
            }
          }
        }
      }
      .footer {
      }
    }
  }
</style>

<config>
  {
  navigationStyle:'custom',
  usingComponents: {
  'top-bar': '../../../components/top-bar/top-bar',
  'loading': '../../../components/loading/loading',
  'error': '../../../components/error/error',
  'empty': '../../../components/empty/empty'
  }
  }
</config>
