<template>
  <div class="container">
    <loading :isLoading="isLoading"></loading>
    <error :isFailure="isFailure" @refresh="onRefresh"></error>
    <div class="content fade" v-if="isSuccess">
      <div class="header">
        <div class="top-bar">
          <div class="top-inner">
            <navigator class="top-location" hover-class="none" :url="addressUrl">
              <span class="location-icon iconfont icon-location"></span>
              <span class="location-text">{{isCity.city.fullname}}</span>
            </navigator>
            <div class="top-search">
              <navigator class="btn btn-search" hover-class="none" :url="searchUrl">
                <div class="btn-icon iconfont icon-search"></div>
                <div class="btn-text">请输入小区/商圈</div>
              </navigator>
            </div>
          </div>
        </div>
      </div>
      <div class="body">
        <div class="context">
          <scroll-view
            class="scroll-view"
            scroll-y="{{true}}">
            <div class="scroll-inner">
              <banner></banner>
              <custom-navigator></custom-navigator>
              <hot-house title="租房推荐" :items="isData.rentRows"></hot-house>
              <hot-house title="二手房推荐" :items="isData.secondRows"></hot-house>
              <hot-house title="新房推荐" :items="isData.newRows"></hot-house>
            </div>
          </scroll-view>
        </div>
      </div>
      <div class="footer"></div>
    </div>
  </div>
</template>

<script type="text/ecmascript-6">
  import wepy from '@wepy/core';
  import store from '../../store';
  import {mapState, mapActions} from '@wepy/redux';
  import * as controller from './controller';
  import * as $routes from '../../router';

  wepy.page({
    store,

    mixins: [],

    data: {
      addressUrl: $routes.ADDRESS.path,
      searchUrl: $routes.SEARCH.path
    },

    computed: {
      ...mapState(controller.STATES)
    },

    methods: {
      ...mapActions(controller.ACTIONS),
      exeAjaxSelectHotHouse() {
        this.ajaxSelectHotHouse()
          .then((res) => {
            console.log(res);
          })
          .catch((err) => {
            console.log(err);
          });
      },
      onRefresh() {
        this.exeAjaxSelectHotHouse();
      }
    },

    onLoad() {
      this.exeAjaxSelectHotHouse();
    }
  });
</script>

<style scoped lang="less">
  @import "../../assets/less/variable";
  @import "../../assets/less/@media";

  @height: unit(64, rpx);

  .container {
    min-height: 100vh;
    .content {
      height: 100vh;
      .header {
        .top-bar {
          width: 100%;
          position: fixed;
          top: 0;
          left: 0;
          z-index: 1000;
          overflow: hidden;
          background-color: @white;
          padding-top: 20px;
          padding-bottom: 5px;
          .top-inner {
            display: flex;
            .top-location {
              width: unit(160, rpx);
              height: @topBarHeight;
              line-height: @topBarHeight;
              padding: 0 unit(20, rpx);
              color: @fontColor1;
              .location-icon {
                display: inline-block;
                vertical-align: middle;
                font-size: @fontSize46;
              }
              .location-text {
                display: inline-block;
                vertical-align: middle;
                margin-left: unit(4, rpx);
                font-size: @fontSize32;
              }
            }
            .top-search {
              text-align: center;
              font-size: 0;
              .btn-search {
                overflow: hidden;
                width: unit(320, rpx);
                height: @height;
                line-height: @height;
                display: inline-block;
                vertical-align: middle;
                border-radius: @height;
                background-color: #f0f0f0;
                color: @fontColor3;
                .btn-icon {
                  position: absolute;
                  top: 0;
                  left: 0;
                  width: @height;
                  height: @height;
                  font-size: @fontSize32;
                }
                .btn-text {
                  height: @height;
                  line-height: @height;
                  padding-left: unit(55, rpx);
                  font-size: @fontSize24;
                  text-align: left;
                }
              }
              &:before {
                content: '';
                height: 100%;
                display: inline-block;
                vertical-align: middle;
              }
            }
          }
        }
      }
      .body {
        height: 100%;
        position: relative;
        .context {
          height: 100%;
          padding-top: 65px;
          .scroll-view {
            height: 100%;
            .scroll-inner {
              padding-bottom: unit(20, rpx);
            }
          }
        }
      }
      .footer {
      }
    }
  }

</style>

<config>
  {
  navigationStyle:'custom',
  usingComponents: {
  'error': '../../components/error/error',
  'banner': '../../components/banner/banner',
  'loading': '../../components/loading/loading',
  'hot-house': '../../components/hot-house/hot-house',
  'custom-navigator': '../../components/custom-navigator/custom-navigator'
  }
  }
</config>
