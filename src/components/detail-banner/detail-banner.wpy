<template>
  <div class="module">
    <div class="module-content">
      <div class="module-body">
        <div class="module-context">
          <div class="module-banner">
            <div class="banner-swiper">
              <swiper class="swiper"
                      autoplay="{{autoplay}}"
                      circular="{{circular}}"
                      @change="onHandleSwiperChange">
                <swiper-item v-for="(item,index) in isData.pic_url" :key="index"
                             @tap="onHandleLargeImage(index)">
                  <lazy-image class="swiper-img" src="{{item}}" lazyStyle="width:120px;height:60px;"/>
                </swiper-item>
              </swiper>
            </div>
            <div class="banner-code">
              <span class="banner-label">{{current}}/{{isData.pic_url.length}}</span>
            </div>
            <div class="banner-btns">
              <button class="btn-favorite" @tap="onHandleFollow">
                <span class="btn-icon iconfont icon-favorite{{isData.isFollow?' active':''}}"></span>
                <span class="btn-text">收藏</span>
              </button>
              <button class="btn-forward" open-type="share">
                <span class="btn-icon iconfont icon-forward"></span>
                <span class="btn-text">分享</span>
              </button>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
</template>

<script type="text/ecmascript-6">
  import wepy from '@wepy/core';
  import store from '../../store';
  import {mapActions} from '@wepy/redux';
  import * as controller from './controller';
  import Toast from '../../mixins/toast';

  wepy.component({
    store,
    mixins: [Toast],
    data: {
      current: 1,
      autoplay: false,
      circular: true
    },
    props: {
      isData: {
        type: Object,
        default: {}
      }
    },
    events: {},
    methods: {
      ...mapActions(controller.ACTIONS),
      onHandleLargeImage(index) {
        wx.previewImage({
          current: this.isData.pic_url[index],
          urls: this.isData.pic_url
        });
      },
      onHandleSwiperChange(e) {
        const current = e.$wx.detail.current;
        this.current = current + 1;
      },
      exeAjaxHouseFollow() {
        console.log(this);
        const params = {house_id: this.isData.id};
        this.ajaxHouseFollow(params)
          .then((res) => {
            const {success} = res.payload;
            if (success) {
              this.showToast('收藏成功');
            } else {
              this.showToast('收藏失败');
            }
            console.log(res);
          })
          .catch((err) => {
            this.showToast('收藏失败');
            console.log(err);
          });
      },
      exeAjaxHouseUnfollow() {
        const params = {house_id: this.isData.id};
        this.ajaxHouseUnfollow(params)
          .then((res) => {
            const {success} = res.payload;
            if (success) {
              this.showToast('取消收藏成功');
            } else {
              this.showToast('取消收藏失败');
            }
            console.log(res);
          })
          .catch((err) => {
            this.showToast('取消收藏失败');
            console.log(err);
          });
      },
      onHandleFollow() {
        this.exeAjaxHouseFollow();
      }
    },
    created() {
    }
  });
</script>

<style scoped lang="less">
  @import "../../assets/less/variable";
  @import "../../assets/less/common";

  .module {
    margin: 0;
    .module-content {
      .module-header {
        padding: unit(30, rpx) unit(30, rpx) 0;
        .module-title {
          height: unit(32, rpx);
          line-height: unit(32, rpx);
          padding-left: unit(20, rpx);
          border-left: 4px solid @theme2;
          font-size: @fontSize5;
          letter-spacing: 0.5px;
          font-weight: bold;
          color: @fontColor1;
        }
      }
      .module-body {
        .module-context {
          .module-banner {
            .banner-swiper {
              position: relative;
              .swiper {
                height: unit(520, rpx);
                .swiper-img {
                  width: 100%;
                  height: 100%;
                }
              }
            }
            .banner-code {
              width: 100%;
              position: absolute;
              left: 0;
              bottom: unit(30, rpx);
              text-align: center;
              font-size: 0;
              .banner-label {
                height: unit(44, rpx);
                line-height: unit(44, rpx);
                min-width: unit(90, rpx);
                display: inline-block;
                padding: 0 unit(20, rpx);
                border-radius: unit(44, rpx);
                background-color: rgba(0, 0, 0, .5);
                font-size: @fontSize1;
                color: @white;
              }
            }
            .banner-btns {
              display: flex;
              position: absolute;
              right: 0;
              z-index: 10;
              bottom: unit(-60, rpx);
              padding: 0 unit(20, rpx);
              button {
                width: unit(90, rpx);
                border-radius: 100%;
                overflow: hidden;
                background-color: @white;
                color: @fontColor3;
                .btn-icon {
                  display: block;
                  height: unit(60, rpx);
                  line-height: unit(70, rpx);
                  font-size: @fontSize7;
                }
                .btn-text {
                  display: block;
                  height: unit(30, rpx);
                  line-height: unit(30, rpx);
                  font-size: unit(22, rpx);
                }
                &.btn-favorite {
                  margin-right: unit(20, rpx);
                  .btn-icon {
                    color: @favorite;
                    &:before {
                      content: '\e633';
                    }
                    &.active {
                      &:before {
                        content: '\e63c';
                      }
                    }
                  }
                }
                &.btn-forward {
                  .btn-icon {
                    color: @forward;
                  }
                }
              }
            }
          }
        }
      }
      .module-footer {

      }
    }
  }
</style>

<config>
  {
  usingComponents: {
  'lazy-image': '../lazy-image/lazy-image'
  }
  }
</config>
