<template>
  <div class="container">
    <div class="content">
      <div class="header">
        <top-bar title="历史浏览"></top-bar>
      </div>
      <div class="body">
        <loading :isLoading="isLoading&&!isData.rows.length"></loading>
        <error :isFailure="isFailure&&!isData.rows.length" @refresh="onRefresh"></error>
        <empty :isSuccess="isSuccess&&!isData.rows.length"></empty>
        <div class="context fade" v-if="isData.rows.length">
          <scroll-view class="scroll-view"
                       scroll-y="{{true}}"
                       @scroll="onHandleScroll"
                       @scrolltolower="onHandleScrollToLower">
            <div class="groups">
              <block v-for="(list,index) in isData.list" :key="index">
                <div class="group">
                  <div class="group-date">
                    <div class="group-label">{{list.date}}</div>
                  </div>
                  <div class="group-items">
                    <block v-for="(item,index) in list.items" :key="index">
                      <new-house-item v-if="item.type===1" :item="item" :isType="true"></new-house-item>
                      <second-house-item v-if="item.type===2" :item="item" :isType="true"></second-house-item>
                      <rent-house-item v-if="item.type===3" :item="item" :isType="true"></rent-house-item>
                    </block>
                  </div>
                </div>
              </block>
            </div>
            <loading-more :length="isData.rows.length" :totalCount="isData.totalCount"></loading-more>
          </scroll-view>
        </div>
      </div>
    </div>
  </div>
</template>

<script type="text/ecmascript-6">
  import wepy from '@wepy/core';
  import store from '../../../store/index';
  import {mapState, mapActions} from '@wepy/redux';
  import * as controller from './controller';
  import Toast from '../../../mixins/toast';

  wepy.page({
    store,

    mixins: [Toast],

    data: {
      timer: null,
      scrollTop: 0,
      pageSize: 10,
      pageIndex: 1
    },

    computed: {
      ...mapState(controller.STATES)
    },

    methods: {
      ...mapActions(controller.ACTIONS),
      onHandleScroll(e) {
        const scrollTop = e.$wx.detail.scrollTop;
        this.scrollTop = parseInt(scrollTop);
      },
      onHandleScrollToLower() {
        if (this.timer) return;
        this.timer = setTimeout(() => {
          const {rows, totalCount} = this.isData;
          if (rows.length < totalCount) {
            this.exeAjaxHouseHistory();
          }
        }, 500);
      },
      resetParams() {
        this.pageSize = 10;
        this.pageIndex = 1;
      },
      getParams() {
        const params = {
          page: {
            pageSize: this.pageSize,
            pageIndex: this.pageIndex
          },
          filter: [
            {
              field: '',
              opt: '',
              value: 0
            }
          ]
        };
        return params;
      },
      exeAjaxHouseHistory() {
        const data = this.isData || {};
        const rows = data.rows || [];
        const params = this.getParams();
        this.ajaxSelectHistory(params)
          .then((res) => {
            const {success} = res.payload;
            if (success) {
              this.pageIndex++;
            } else {
              if (rows.length) {
                this.showToast('请求失败');
              }
            }
            this.timer = null;
            console.log(res);
          })
          .catch((err) => {
            if (rows.length) {
              this.showToast('请求失败');
            }
            this.timer = null;
            console.log(err);
          });
      },
      onRefresh() {
        this.exeAjaxHouseHistory();
      }
    },

    onLoad() {
      this.resetParams();
      this.removeHistoryReplace();
      this.exeAjaxHouseHistory();
    }
  });
</script>

<style scoped lang="less">
  @import "../../../assets/less/variable";
  @import "../../../assets/less/@media";

  .container {
    min-height: 100vh;
    .content {
      height: 100vh;
      .header {
      }
      .body {
        height: 100%;
        position: relative;
        .context {
          height: 100%;
          padding-top: 65px;
          .scroll-view {
            height: 100%;
            .groups {
              .group-date {
                height: unit(60, rpx);
                line-height: unit(60, rpx);
                font-size: @fontSize24;
                color: @fontColor3;
                .group-label {
                  width: 100%;
                  height: unit(60, rpx);
                  line-height: unit(60, rpx);
                  padding: 0 unit(30, rpx);
                  background-color: #F7F7F7;
                  &.fixed {
                    position: fixed;
                    top: 65px;
                    left: 0;
                    width: 100%;
                    z-index: 1000;
                  }
                }
              }
              .group-items {
              }
            }
          }
        }
      }
    }
  }

  .scroll-top {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 65px;
    line-height: 65px;
    background-color: #000;
    color: @white;
    font-size: 30px;
    text-align: center;
    z-index: 2000;
  }
</style>

<config>
  {
  navigationStyle:'custom',
  disableScroll:true,
  usingComponents: {
  'top-bar': '../../../components/top-bar/top-bar',
  'loading': '../../../components/loading/loading',
  'error': '../../../components/error/error',
  'empty': '../../../components/empty/empty',
  'loading-more': '../../../components/loading-more/loading-more',
  'new-house-item': '../../../components/new-house-item/new-house-item',
  'second-house-item': '../../../components/second-house-item/second-house-item',
  'rent-house-item': '../../../components/rent-house-item/rent-house-item'
  }
  }
</config>
