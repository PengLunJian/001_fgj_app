<template>
  <div class="container">
    <div class="content">
      <div class="header">
        <top-bar title="用户登录"></top-bar>
      </div>
      <div class="body">
        <div class="context">
          <div class="login-container">
            <div class="login-content">
              <div class="login-header">
                <img src="../../../assets/images/logo@2x.png" mode="aspectFit"/>
              </div>
              <div class="login-body">
                <button class="btn btn-wechat" hover-class="none" open-type="getPhoneNumber"
                        @getphonenumber="onHandleGrantLogin">
                  <span class="btn-icon iconfont icon-wechat"></span>
                  <span class="btn-text">微信授权登录</span>
                </button>
                <button class="btn btn-mobile" hover-class="none" @tap="onHandlePhoneLogin">
                  <span class="btn-icon iconfont icon-mobile"></span>
                  <span class="btn-text">手机快捷登录</span>
                </button>
              </div>
              <div class="login-footer"></div>
            </div>
          </div>
        </div>
      </div>
      <div class="footer"></div>
    </div>
  </div>
</template>

<script type="text/ecmascript-6">
  import wepy from '@wepy/core';
  import store from '../../../store';
  import Toast from '../../../mixins/toast';
  import Route from '../../../mixins/route';
  import Storage from '../../../mixins/storage';
  import {mapState, mapActions} from '@wepy/redux';
  import * as $routes from '../../../router';
  import * as controller from './controller';

  wepy.page({
    store,

    mixins: [Toast, Route, Storage],

    data: {
      code: '',
      id: '',
      iv: '',
      sessionKey: '',
      encryptedData: ''
    },

    computed: {
      ...mapState(controller.STATES)
    },

    methods: {
      ...mapActions(controller.ACTIONS),
      onHandleGrantLogin(e) {
        const {errMsg} = e.$wx.detail;
        if (errMsg === 'getPhoneNumber:ok') {
          const {iv, encryptedData} = e.$wx.detail;
          this.iv = iv;
          this.encryptedData = encryptedData;
          this.onHandleWechatCode()
            .then((res) => {
              this.exeAjaxSelectPhone();
              console.log(res);
            })
            .catch((err) => {
              console.log(err);
            });
        } else {
          console.log(false);
        }
      },
      onHandleWechatCode() {
        return new Promise((resolve, reject) => {
          wx.login({
            success: (res) => {
              res = res || {};
              const {code} = res;
              this.code = code;
              resolve(res);
            },
            fail: (err) => {
              reject(err);
            }
          });
        });
      },
      onHandlePhoneLogin() {
        this.navigateTo($routes.WAITING.path);
      },
      exeAjaxSelectLogin() {
        const {code} = this;
        this.ajaxSelectLogin({code})
          .then((res) => {
            res = res || {};
            const {success, data} = res.payload;
            if (success) {
              const {id, sessionKey} = data;
              this.id = id;
              this.sessionKey = sessionKey;
              this.exeAjaxSelectPhone();
            } else {
              this.showToast('登录失败，请重试');
            }
            console.log(res);
          })
          .catch((err) => {
            this.showToast('登录失败，请重试');
            console.log(err);
          });
      },
      exeAjaxSelectPhone() {
        const params = this.getParams();
        this.ajaxSelectPhone(params)
          .then((res) => {
            res = res || {};
            const {success, data} = res.payload;
            if (success) {
              const phone = data;
              const start = phone.substr(0, 3);
              const end = phone.substr(8, 3);
              const hidePhone = start + '****' + end;
              this.setItem('user', {phone, hidePhone});
              this.navigateBack(1);
            } else {
              this.showToast('登录失败，请重试');
            }
            console.log(res);
          })
          .catch((err) => {
            this.showToast('登录失败，请重试');
            console.log(err);
          });
      },
      getParams() {
        const {code, iv, encryptedData} = this;
        const params = {
          iv,
          code,
          encryptedData
        };
        return params;
      }
    },

    onLoad() {
    }
  });
</script>

<style scoped lang="less">
  @import "../../../assets/less/variable";
  @import "../../../assets/less/@media";

  @height: unit(100, rpx);

  .container {
    min-height: 100vh;
    .content {
      height: 100vh;
      .header {
      }
      .body {
        height: 100%;
        position: relative;
        .context {
          height: 100%;
          padding-top: 65px;
          .login-container {
            height: 100%;
            position: relative;
            padding-top: unit(200, rpx);
            .login-content {
              padding: unit(60, rpx);
              .login-header {
                margin-bottom: unit(80, rpx);
                image {
                  width: unit(250, rpx);
                  height: unit(80, rpx);
                  margin: 0 auto;
                }
              }
              .login-body {
                padding-top: unit(130, rpx);
                .btn {
                  overflow: hidden;
                  margin-bottom: unit(40, rpx);
                  border-radius: @borderRadius1;
                  text-align: center;
                  color: @white;
                  font-size: 0;
                  .btn-icon {
                    height: unit(100, rpx);
                    line-height: unit(100, rpx);
                    display: inline-block;
                    vertical-align: middle;
                    font-size: @fontSize46;
                  }
                  .btn-text {
                    height: unit(100, rpx);
                    line-height: unit(100, rpx);
                    display: inline-block;
                    vertical-align: middle;
                    margin-left: unit(10, rpx);
                    font-size: @fontSize36;
                    letter-spacing: 1px;
                  }
                  &.btn-wechat {
                    background-color: @theme2;
                  }
                  &.btn-mobile {
                    border: 1px solid @theme2;
                    color: @theme2;
                    .btn-icon {
                      height: unit(96, rpx);
                      line-height: unit(96, rpx);
                    }
                    .btn-text {
                      height: unit(96, rpx);
                      line-height: unit(96, rpx);
                    }
                  }
                  &:last-child {
                    margin: 0;
                  }
                }
              }
              .login-footer {
                height: unit(130, rpx);
              }
            }
          }
        }
      }
      .footer {
      }
    }
  }
</style>

<config>
  {
  navigationStyle:'custom',
  usingComponents: {
  'top-bar': '../../../components/top-bar/top-bar',
  }
  }
</config>
